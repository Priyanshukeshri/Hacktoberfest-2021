#include<bits/stdc++.h>

using namespace std;
#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)
#define MOD 1000000007
#define MOD1 998244353
#define INF 1e18
#define nline "\n"
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define ff first
#define ss second
#define PI 3.14159265358979323846
typedef long long ll;
typedef unsigned long long ull;
typedef long double lld;
const int m=1e6;
ll gcd(ll a,ll b)
{
    if(a==0)
        return b;
    return gcd(b%a,a);
}

ll power(ll x,ll y)
{
     ll res=1;
     while(y>0)
     {
      if(y%2!=0)
           res=(res*x)%MOD;
    
      x=(x*x)%MOD;
      y=(y/2)%MOD;

     }
     return res%MOD;
}
void seive(vector<ll> &vt)
{
    int m=1000000;
    vector<int> v(m+1,true);
    for(int i=2;i<=sqrt(m);i++)
    {
      if(v[i]==true)
      {
        for(int j=i*2;j<=sqrt(m);j=j+i)
          v[j]=false;
      }
    }
    for(int i=2;i<=m;i++)
    {
       if(v[i]==true)
       {
         vt.pb(i);
       }
    }
}
bool perfectsqr(ll x)
{
  if(x>0)
  {
     ll a=sqrt(x);
     return (a*a==x);
  }
  return false;
}
 int length(ll n)
 {
    int count=0;
    while(n>0)
    {
        count++;
        n=n/10;
    }
    return count;
 }

 vector<ll> factor(ll n,vector<ll> &vt)
{
    vector<ll> v;
    while(n%vt[0]==0)
    {
        v.push_back(2);
        n=n/2;
    }

    int i;
    for(i=1;v[i]*v[i]<=n;i++)
    {
        while(n%vt[i]==0)
        {
            v.push_back(vt[i]);
            n=n/i;
        }
    }
    if(n>2)
        v.push_back(n);
    return v;
}

//-------------------------------------------------------------------------------------------------------------------------------------
void solve()
{
  vector<ll> vt;
  seive(vt);
    
    ll t;
    cin>>t;
    while(t--)
    {
        ll a,b;
        cin>>a>>b;
        vector<ll> fact=factor(a,vt);
        for(ll x:fact)
          cout<<x<<" ";
        cout<<nline;
        
    }
}

int main() 
{
  #ifndef ONLINE_JUDGE
	 freopen("input.txt", "r", stdin);
	 freopen("output.txt", "w", stdout);
  #endif
  fastio();
  solve();
}
